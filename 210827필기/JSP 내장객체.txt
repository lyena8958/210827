

[ JSP 내장객체 ]

scope == 유효범위

 request -- 스코프가 짧다
	사용자의 입력정보가 담긴 객체
	(요청정보) - 브라우저 측에서 들어온 정보
	form > input, select

 reponse -- 스코프가 짧다
	요청에 대한 응답(서버측) 객체
 out
	사용자에게 전달할 페이지를 작성하는 output 스트림 객체
 exception 
	예외처리 관련객체

session

application
강사님 헷갈려서그런데.. 애플리케이션에서 set속성을 한 뒤에 객체데이터에 변경사항이 있으면 애플리케이션에 알아서저장을 해주는건가욤? 아니면.. 다시 set을해야하나요??
IT 강남 A Class에서 나에게:  (DM) 04:25 PM
application에 저장해둔 데이터가
일반 int나 그냥 값이면  (원시 데이터)    다시 set해야하는데
객체라던지..... "메모리 위치"를 저장시켰으면
따로 set안해도됩니당

[response 메서드 sendredirect]
<!-- 이메일은 당연히 안나오는데, 이름도 안나온다 -->
<!-- response객체를 주체로한 샌드리다이렉팅 방식은 
	기존 jsp 액션태그(forward방식)와 다르게, 
	페이지를 전환/이동 할때에  전환과 이동을 위한, request, response 매번 객체를 새로 생성함-->
<!-- 데이터가 따라다니느냐(forward) VS 매번 생성되느냐(샌드리다이렉팅) >> 보통은 forward를 사용함-->
<!-- 
강사님 ㅎㅎ.. 또 질문할거있는데욤..!
forward를부르면 URL foward.jsp로 뜨고, 
redirect를 부르면 URL result.jsp로 나오는데 요거 차이점이 

forward는 본인페이지이나, "주도권만" 불러낸 페이지로 넘어가서 result페이지의 데이터?를 forward로 모두 갖고와서 그런거고,
redirect 페이지를 넘겨주기위해 request를 새로만드는(새로고침형식..?)것이  제가 잘이해한게맞나용??

==> 맞음, 근데 redirect는 페이지를 새로 생성하는형식
 -->
(예시코드)
<form action="response_sendRedirect_8.jsp" method="post">
	<input type="text" name="username">
	<input type="submit" value="페이지 이동">
</form>

★scope == 유효범위 
	중요한이유가 밑에 애들이 80%차지

세션, 애플리케이션 => Object단위로 데이터를 보관하여 객체로 보관이 가능하다.
			둘다 서버쪽으로 돌아감
	
	[session] - >면접질문 단골 (스코프가 적다) --> request, response보다는 스코프 길다
	  쿠키 : 클라이언트인 브라우저에 저장하기 위해서 사용
	(내수행이 서버에 부담일수있기 때문-->이전내용을 자꾸보여주니 방문기록을 없애주는것과 비슷한 원리)
	(내가 로그인을 안했는데도 장바구니가 담길 때, 쿠키를 써서 그런 것)
	세션은 유효시간이 있다. == 30분? (네이버장기접속시 30분단위로 비밀번호확인함)
	  세션이만료되었다 == 시간이 만료가되었으니 다시 접속해라. (시간==인터벌 개념때문에)

	>> 세션과 쿠키랑 셋트로 묶임 <<

	  세션 :  클라이언트의 세션정보가 담긴 내장객체 --> 단위는 "브라우저 단위", 시간 제한 (톰캣이꺼지지않아도 브라우저를종료시키면사라짐)
	작은서버 , 일정부분 데이터를 저장할 수 있게함, 브라우저 단위로 되어있음
	(네이버로그인 후, 브라우저를 닫고 다시 네이버키면 로그아웃이 되어있는 것처럼)
	ex) 로그인, 장바구니 구현

	[session내장객체의 메서드] --> day42_0825 NF7
	내장객체가 쓸 수 있는 메서드 (단독으로 잘 안쓰임)
	session.isNew() : 세션이 새거니? --> 세션이없거나, 만료될때만 셋팅하도록설정 //if를 설정안했다면 페이지를 볼때마다 세션생성, 
	session.setAttribute("객체명", "객체");
	session.setMaxInactiveInterval == 세션시간설정
	getMaxInactiveInterval == 남은세션시간 알려줌

-----------------------------------------------------------------------------------------------------------------------------------------
	(톰캣 단위이기때문에 스코프가 길다) >> 애플리케이션으로 하는경우 데이터를 잃고싶지않다는 의미 == 데이터를 다 모으므로 용량때문
	[application] : 웹 서버의 애플리케이션을 처리하는 내장객체
		컨테이너 단위(톰캣 종료하면 사라짐-브라우저를닫아도 톰캣을 종료해야 꺼짐) << 용량때문에 session을 사용하는 경우가 많다.
		ex) 블로그 방문자 수, 미니홈피 투데이 방문자수 

	[application내장객체의 메서드] 
	application.setAttribute ("객체명","객체")

